* Fibonacci Numbers
** Code
*** Rust
#+BEGIN_SRC rust
  fn fibonacci(terms: usize) -> Vec<u32> {
      let mut arr: Vec<u32> = Vec::new();
      if terms > 0 {
          arr.push(0);
      }
      if terms > 1 {
          arr.push(1);
      }
      for i in 2..terms {
          arr.push(arr[i - 1] + arr[i - 2]);
      }
      arr
  }
#+END_SRC
*** Clojure
#+BEGIN_SRC clojure :results output
  (defn fibonacci-series
    ([] (fibonacci-series 0 1))
    ([x y] (lazy-seq (cons x (fibonacci-series y (+ x y))))))

  (println (take 20 (fibonacci-series)))
#+END_SRC

#+RESULTS:
: (0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)
